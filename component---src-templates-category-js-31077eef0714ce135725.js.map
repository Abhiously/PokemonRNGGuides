{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Visibility.js","webpack:///./src/components/guide-list.js","webpack:///./src/templates/category.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","d","useStyles","makeStyles","theme","guideInfo","display","paddingTop","spacing","paddingBottom","borderBottom","palette","divider","viewButton","marginRight","subCategoryTitle","marginTop","GuideList","guides","classes","guideList","map","guide","frontmatter","title","slug","description","guideTitleId","getGuideTitleId","guideDescriptionId","getGuideDescriptionId","ListItem","className","key","disableGutters","IconButton","component","Link","to","role","aria-labelledby","ListItemText","Typography","variant","id","Fragment","List","CategoryTemplate","data","pageContext","allMdx","nodes","category","organizedGuides","reduce","result","subCategory","subCategoryGuides","push","content","keys","sort","query"],"mappings":"6FAEA,EAAQ,QAER,IAAIA,EAAyB,EAAQ,QAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAiB,aAAI,EAErB,IAAIE,EAASL,EAAuB,EAAQ,SAIxCM,GAAW,EAFMN,EAAuB,EAAQ,SAET,SAAGK,EAAgB,QAAEE,cAAc,OAAQ,CACpFC,EAAG,sNACD,cAEJL,EAAiB,QAAIG,G,yOCTfG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAS,OACTC,WAAYH,EAAMI,QAAQ,GAC1BC,cAAeL,EAAMI,QAAQ,GAC7BE,aAAa,aAAcN,EAAMO,QAAQC,SAE3CC,WAAY,CACVC,YAAaV,EAAMI,QAAQ,IAE7BO,iBAAkB,CAChBC,UAAWZ,EAAMI,QAAQ,QAOhBS,EAAY,SAAC,GAAkC,IAAhCF,EAA+B,EAA/BA,iBAAkBG,EAAa,EAAbA,OACtCC,EAAUjB,IAEVkB,EAAYF,EAAOG,KAAI,SAAAC,GAAU,IAAD,EACCA,EAAMC,YAAnCC,EAD4B,EAC5BA,MAAOC,EADqB,EACrBA,KAAMC,EADe,EACfA,YACfC,EARc,SAAAF,GAAI,eAAaA,EAAb,SAQHG,CAAgBH,GAC/BI,EARoB,SAAAJ,GAAI,eAAaA,EAAb,eAQHK,CAAsBL,GAEjD,OACE,kBAACM,EAAA,EAAD,CAAUC,UAAWb,EAAQd,UAAW4B,IAAKT,EAAOU,gBAAc,GAChE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXL,UAAWb,EAAQN,WACnByB,GAAE,IAAMb,EACRc,KAAK,OACLC,kBAAoBb,EAApB,IAAoCE,GAEpC,kBAAC,IAAD,OAEF,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,IAAIQ,GAAIjB,GACxCH,GAEH,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,GAAIf,GAC7BH,QAOX,OACE,kBAAC,IAAMmB,SAAP,KACE,kBAACH,EAAA,EAAD,CACEC,QAAQ,KACRP,UAAU,KACVJ,UAAWb,EAAQJ,kBAElBA,GAEH,kBAAC+B,EAAA,EAAD,KAAO1B,K,sCCnCE2B,UA5BU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1B/B,EAAS8B,EAAKE,OAAOC,MACnBC,EAAaH,EAAbG,SAEFC,EAAkBnC,EAAOoC,QAAO,SAACC,EAAQjC,GAC7C,IAAMkC,EAAclC,EAAMC,YAAYiC,aAAe,UAC/CC,EAAoBF,EAAOC,IAAgB,GAMjD,OAJAC,EAAkBC,KAAKpC,GAEvBiC,EAAOC,GAAeC,EAEfF,IACN,IAEGI,EAAUjE,OAAOkE,KAAKP,GACzBQ,OACAxC,KAAI,SAAAmC,GAAW,OACd,kBAAC,EAAD,CACEvB,IAAKuB,EACLzC,iBAAkByC,EAClBtC,OAAQmC,EAAgBG,QAI9B,OAAO,kBAAC,IAAD,CAAYhC,MAAO4B,GAAWO,IAzBvC,IA8BaG,EAAK","file":"component---src-templates-category-js-31077eef0714ce135725.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports[\"default\"] = _default;","import React from 'react';\nimport { Link } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n  guideInfo: {\n    display: 'flex',\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  viewButton: {\n    marginRight: theme.spacing(4),\n  },\n  subCategoryTitle: {\n    marginTop: theme.spacing(6),\n  },\n}));\n\nconst getGuideTitleId = slug => `guide-${slug}-title`;\nconst getGuideDescriptionId = slug => `guide-${slug}-description`;\n\nexport const GuideList = ({ subCategoryTitle, guides }) => {\n  const classes = useStyles();\n\n  const guideList = guides.map(guide => {\n    const { title, slug, description } = guide.frontmatter;\n    const guideTitleId = getGuideTitleId(slug);\n    const guideDescriptionId = getGuideDescriptionId(slug);\n\n    return (\n      <ListItem className={classes.guideInfo} key={title} disableGutters>\n        <IconButton\n          component={Link}\n          className={classes.viewButton}\n          to={`/${slug}`}\n          role=\"link\"\n          aria-labelledby={`${guideTitleId} ${guideDescriptionId}`}\n        >\n          <VisibilityIcon />\n        </IconButton>\n        <ListItemText>\n          <Typography variant=\"h5\" component=\"p\" id={guideTitleId}>\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" id={guideDescriptionId}>\n            {description}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h4\"\n        component=\"h2\"\n        className={classes.subCategoryTitle}\n      >\n        {subCategoryTitle}\n      </Typography>\n      <List>{guideList}</List>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MainLayout } from '../layouts/main';\nimport { GuideList } from '../components/guide-list';\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const guides = data.allMdx.nodes;\n  const { category } = pageContext;\n\n  const organizedGuides = guides.reduce((result, guide) => {\n    const subCategory = guide.frontmatter.subCategory || 'General';\n    const subCategoryGuides = result[subCategory] || [];\n\n    subCategoryGuides.push(guide);\n\n    result[subCategory] = subCategoryGuides;\n\n    return result;\n  }, {});\n\n  const content = Object.keys(organizedGuides)\n    .sort()\n    .map(subCategory => (\n      <GuideList\n        key={subCategory}\n        subCategoryTitle={subCategory}\n        guides={organizedGuides[subCategory]}\n      />\n    ));\n\n  return <MainLayout title={category}>{content}</MainLayout>;\n};\n\nexport default CategoryTemplate;\n\nexport const query = graphql`\n  query($categoryRegex: String!) {\n    allMdx(filter: { fields: { pagePath: { regex: $categoryRegex } } }) {\n      nodes {\n        frontmatter {\n          title\n          description\n          slug\n          subCategory\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}