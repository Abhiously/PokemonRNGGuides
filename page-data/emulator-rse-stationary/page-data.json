{"componentChunkName":"component---src-templates-post-js","path":"/emulator-rse-stationary","result":{"data":{"mdx":{"frontmatter":{"title":"Live Battery Stationary Abuse (Ruby/Sapphire)","description":"Enjoy shiny 6 IV legends from Gen 3"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Live Battery Stationary Abuse (Ruby/Sapphire)\",\n  \"description\": \"Enjoy shiny 6 IV legends from Gen 3\",\n  \"slug\": \"emulator-rse-stationary\",\n  \"subCategory\": \"Emulator\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://code.google.com/archive/p/vba-rerecording/downloads\"\n  }), \"VBA-RR\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Admiral-Fish/PokeFinder/releases\"\n  }), \"PokeFinder\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://pokerng.forumcommunity.net/?t=56443955\"\n  }), \"The Ruby/Sapphire Lua Scripts for your language\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Password for the lua script archive is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"allyouneedisnoob\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.nirsoft.net/utils/run_as_date.html\"\n  }), \"runasdate (Optional)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A save file that has been ID abused.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optional but recommended if going for shiny spreads with good IVs.\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Note: This method will work on any Pokemon generated by Method 1 in Pokemon Ruby/Sapphire. Keep in mind that if you're looking for an specific spread to be shiny, ID/SID abuse might be required before attempting this RNG.\\n\")), mdx(\"h2\", null, \"Step 1: Setup VBA-RR\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make sure the save mode is set correctly.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Options > Emulation > Save Type > Automatic & Flash 128K\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Real Time Clock must be enabled in order to obtain Live Battery seeds.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Options > Emulation > Real Time Clock\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If there are errors when loading past the title screen, such as corrupted save or dead battery message, restart VBA for the changes to take effect.\")), mdx(\"h2\", null, \"Step 2: Setup PokeFinder\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In PokeFinder, Choose \\\"Gen 3 Stationary\\\" and click the \\\"Searcher\\\" tab\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Input the spread you want and look for results.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If there are no results, adjust filters until there is a result that you want.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure PokeFinder is using Method 1\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/ec6wP4.jpg\",\n    \"alt\": null\n  }))), mdx(\"h2\", null, \"Step 3: Getting your Initial Seed\"), mdx(\"p\", null, \"The seed you got from that screen was simply the seed you must hit when you press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A\"), \" on encounter.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To get your initial seed, right click on the seed you are using and choose \\\"Generate times to seed\\\".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The seed will automatically be added into \\\"16-Bit Seed To Time\\\".\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure the year is set to 2000 as other years will not work correctly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This will give you your initial seed and the date and time needed to hit your desired seed.\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/N6RZkM.jpg\",\n    \"alt\": null\n  }))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Finding the Frame to hit\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On the screen of PokeFinder below enter your initial seed and spread. Make sure that it is set to search \\\"Method 1\\\". It should look something like this:\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/mQuEG8.jpg\",\n    \"alt\": null\n  }))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hit \\\"Generate\\\" and look for results. If you don't get a result, try extending the max results to a higher number.\")), mdx(\"h2\", null, \"Step 3: Hitting the Desired Seed and Frame\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open runasdate (or change your computer clock) and set the date to one listed in \\\"16-Bit Seed To Time\\\".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you are using runasdate set up the screen just like how it is shown below:\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/Fw7Xk9.jpg\",\n    \"alt\": null\n  }))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Note: Unlike Generations 4 and 5, only the hours and minutes matter for hitting the initial seed.\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hit run and you will open VBA-RR.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Load the lua script for your game.\")), mdx(\"h2\", null, \"Step 4: Finding the delay\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Advance to the final screen before encountering the target Pokemon making save states along the way.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When you land on your target frame press \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A\"), \" and enter the encounter.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Take note of the IVs of the Pokemon you encounterd.\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/wpUMTv.jpg\",\n    \"alt\": null\n  }))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"pen a new PokeFinder and input your initial seed and the IVs of the Pokemon encountered.\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/dVAqKe.jpg\",\n    \"alt\": null\n  }))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- Since I hit `A` on Frame 89016 that means 54 Frames went by between my last input (hitting `A`) and the IVs and PID being generated.\\n- Therefore, to hit my 31/2/31/31/31/31 Modest spread, I must hit frame 180124.\\n- Target Frame = Desired Frame - Delay\\n\")), mdx(\"h2\", null, \"Step 5: Advancing frames\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Advance frames paying attention to the frame count so you don't miss your target frame.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Advance until you reach your new target frame, pause the emulator again and hold the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A\"), \" button.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unpause the emulator and hit your shiny frame!\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you did everything right, you should be able to hit your desired spread on your Pokemon. If not, calculate how many frames you are off, reload a previous save state, adjust accordingly, and try again.\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://snag.gy/Rs2qYH.jpg\",\n    \"alt\": null\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"emulator-rse-stationary"}}}