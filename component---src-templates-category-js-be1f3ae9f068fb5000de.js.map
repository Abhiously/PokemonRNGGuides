{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Visibility.js","webpack:///./src/templates/category.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","d","useStyles","makeStyles","guideInfo","display","padding","divider","marginLeft","marginRight","viewButton","CategoryTemplate","data","pageContext","classes","guides","allMarkdownRemark","nodes","category","guideList","map","guide","index","frontmatter","title","slug","description","toUrl","Fragment","key","className","component","Link","to","variant","query"],"mappings":"6FAEA,EAAQ,QAER,IAAIA,EAAyB,EAAQ,QAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAiB,aAAI,EAErB,IAAIE,EAASL,EAAuB,EAAQ,SAIxCM,GAAW,EAFMN,EAAuB,EAAQ,SAET,SAAGK,EAAgB,QAAEE,cAAc,OAAQ,CACpFC,EAAG,sNACD,cAEJL,EAAiB,QAAIG,G,kCCnBrB,mKASMG,EAAYC,YAAW,CAC3BC,UAAW,CACTC,QAAS,OACTC,QAAS,aAEXC,QAAS,CACPC,WAAY,OACZC,YAAa,QAEfC,WAAY,CACVD,YAAa,UAkCFE,UA9BU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BC,EAAUZ,IACVa,EAASH,EAAKI,kBAAkBC,MAC9BC,EAAaL,EAAbK,SACFC,EAAYJ,EAAOK,KAAI,SAACC,EAAOC,GAAW,IAAD,EACRD,EAAME,YAAnCC,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,YACfC,EAAK,IAAOF,EAClB,OACE,kBAAC,IAAMG,SAAP,CAAgBC,IAAKL,GAClBF,EAAQ,GAAK,kBAAC,IAAD,CAASQ,UAAWhB,EAAQP,UAC1C,yBAAKuB,UAAWhB,EAAQV,WACtB,kBAAC,IAAD,CACE2B,UAAWC,IACXF,UAAWhB,EAAQJ,WACnBuB,GAAIN,GAEJ,kBAAC,IAAD,OAEF,6BACE,kBAAC,IAAD,CAAYO,QAAQ,MAAMV,GAC1B,kBAAC,IAAD,CAAYU,QAAQ,SAASR,SAOvC,OAAO,kBAAC,IAAD,CAAYF,MAAON,GAAWC,IAKhC,IAAMgB,EAAK","file":"component---src-templates-category-js-be1f3ae9f068fb5000de.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports[\"default\"] = _default;","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MainLayout } from '../layouts/main';\nimport Divider from '@material-ui/core/Divider';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles({\n  guideInfo: {\n    display: 'flex',\n    padding: '3rem 2rem',\n  },\n  divider: {\n    marginLeft: '2rem',\n    marginRight: '2rem',\n  },\n  viewButton: {\n    marginRight: '2rem',\n  },\n});\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const classes = useStyles();\n  const guides = data.allMarkdownRemark.nodes;\n  const { category } = pageContext;\n  const guideList = guides.map((guide, index) => {\n    const { title, slug, description } = guide.frontmatter;\n    const toUrl = `/${slug}`;\n    return (\n      <React.Fragment key={title}>\n        {index > 0 && <Divider className={classes.divider} />}\n        <div className={classes.guideInfo}>\n          <IconButton\n            component={Link}\n            className={classes.viewButton}\n            to={toUrl}\n          >\n            <VisibilityIcon />\n          </IconButton>\n          <div>\n            <Typography variant=\"h5\">{title}</Typography>\n            <Typography variant=\"body2\">{description}</Typography>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  });\n\n  return <MainLayout title={category}>{guideList}</MainLayout>;\n};\n\nexport default CategoryTemplate;\n\nexport const query = graphql`\n  query($categoryRegex: String!) {\n    allMarkdownRemark(\n      filter: { fields: { pagePath: { regex: $categoryRegex } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          description\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}