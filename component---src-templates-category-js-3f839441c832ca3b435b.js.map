{"version":3,"file":"component---src-templates-category-js-3f839441c832ca3b435b.js","mappings":"yHAEIA,EAAyB,EAAQ,MAEjCC,EAA0B,EAAQ,KAKtCC,EAAQ,OAAU,EAElB,IAAIC,EAAQF,EAAwB,EAAQ,OAIxCG,GAAW,EAFMJ,EAAuB,EAAQ,OAElBK,SAAuBF,EAAMG,cAAc,OAAQ,CACnFC,EAAG,sNACD,cAEJL,EAAQ,EAAUE,G,oMCPZI,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAS,OACTC,WAAYH,EAAMI,QAAQ,GAC1BC,cAAeL,EAAMI,QAAQ,IAE/BE,WAAY,CACVC,YAAaP,EAAMI,QAAQ,IAE7BI,iBAAkB,CAChBC,UAAWT,EAAMI,QAAQ,QAOhBM,EAAY,SAAC,GAAkC,IAAhCF,EAA+B,EAA/BA,iBAAkBG,EAAa,EAAbA,OACtCC,EAAUd,IAEVe,EAAgBC,GAAAA,CAAQH,GAAQ,SAAAI,GAAK,OAAIA,EAAMC,YAAYC,SAE3DC,EAAYL,EAAcM,KAAI,SAACJ,EAAOK,GAC1C,MAAqCL,EAAMC,YAAnCC,EAAR,EAAQA,MAAOI,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,YACfC,EAVc,SAAAF,GAAI,eAAaA,EAAb,SAUHG,CAAgBH,GAC/BI,EAVoB,SAAAJ,GAAI,eAAaA,EAAb,eAUHK,CAAsBL,GAEjD,OACE,gBAAC,WAAD,CAAgBM,IAAKV,GACnB,gBAACW,EAAA,EAAD,CAAUC,UAAWjB,EAAQX,UAAW6B,gBAAc,GACpD,gBAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,GACXJ,UAAWjB,EAAQN,WACnB4B,GAAE,IAAMb,EACRc,KAAK,OACL,kBAAoBZ,EAApB,IAAoCE,GAEpC,gBAACW,EAAA,EAAD,OAEF,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,IAAIQ,GAAIjB,GACxCN,GAEH,gBAACqB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,GAAIf,GAC7BH,KAINF,EAAQP,EAAc4B,OAAS,GAC9B,gBAACC,EAAA,EAAD,CAAS,cAAY,aAM7B,OACE,gBAAC,WAAD,KACE,gBAACJ,EAAA,EAAD,CACEC,QAAQ,KACRP,UAAU,KACVH,UAAWjB,EAAQJ,kBAElBA,GAEH,gBAACmC,EAAA,EAAD,KAAOzB,KC3Cb,EA5ByB,SAAC,GAA2B,IAAzB0B,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BlC,EAASiC,EAAKE,OAAOC,MACnBC,EAAaH,EAAbG,SAEFC,EAAkBtC,EAAOuC,QAAO,SAACC,EAAQpC,GAC7C,IAAMqC,EAAcrC,EAAMC,YAAYoC,aAAe,UAC/CC,EAAoBF,EAAOC,IAAgB,GAMjD,OAJAC,EAAkBC,KAAKvC,GAEvBoC,EAAOC,GAAeC,EAEfF,IACN,IAEGI,EAAUC,OAAOC,KAAKR,GACzBS,OACAvC,KAAI,SAAAiC,GAAW,OACd,gBAAC1C,EAAD,CACEiB,IAAKyB,EACL5C,iBAAkB4C,EAClBzC,OAAQsC,EAAgBG,QAI9B,OAAO,gBAAC,IAAD,CAAYnC,MAAO+B,GAAWO","sources":["webpack://pokemonrng-com/./node_modules/@material-ui/icons/Visibility.js","webpack://pokemonrng-com/./src/components/guide-list.js","webpack://pokemonrng-com/./src/templates/category.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import React from 'react';\nimport { Link } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport orderBy from 'lodash/orderBy';\n\nconst useStyles = makeStyles(theme => ({\n  guideInfo: {\n    display: 'flex',\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n  },\n  viewButton: {\n    marginRight: theme.spacing(4),\n  },\n  subCategoryTitle: {\n    marginTop: theme.spacing(6),\n  },\n}));\n\nconst getGuideTitleId = slug => `guide-${slug}-title`;\nconst getGuideDescriptionId = slug => `guide-${slug}-description`;\n\nexport const GuideList = ({ subCategoryTitle, guides }) => {\n  const classes = useStyles();\n\n  const orderedGuides = orderBy(guides, guide => guide.frontmatter.title);\n\n  const guideList = orderedGuides.map((guide, index) => {\n    const { title, slug, description } = guide.frontmatter;\n    const guideTitleId = getGuideTitleId(slug);\n    const guideDescriptionId = getGuideDescriptionId(slug);\n\n    return (\n      <React.Fragment key={title}>\n        <ListItem className={classes.guideInfo} disableGutters>\n          <IconButton\n            component={Link}\n            className={classes.viewButton}\n            to={`/${slug}`}\n            role=\"link\"\n            aria-labelledby={`${guideTitleId} ${guideDescriptionId}`}\n          >\n            <VisibilityIcon />\n          </IconButton>\n          <ListItemText>\n            <Typography variant=\"h5\" component=\"p\" id={guideTitleId}>\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" id={guideDescriptionId}>\n              {description}\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        {index < orderedGuides.length - 1 && (\n          <Divider aria-hidden=\"true\" />\n        )}\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h4\"\n        component=\"h2\"\n        className={classes.subCategoryTitle}\n      >\n        {subCategoryTitle}\n      </Typography>\n      <List>{guideList}</List>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MainLayout } from '../layouts/main';\nimport { GuideList } from '../components/guide-list';\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const guides = data.allMdx.nodes;\n  const { category } = pageContext;\n\n  const organizedGuides = guides.reduce((result, guide) => {\n    const subCategory = guide.frontmatter.subCategory || 'General';\n    const subCategoryGuides = result[subCategory] || [];\n\n    subCategoryGuides.push(guide);\n\n    result[subCategory] = subCategoryGuides;\n\n    return result;\n  }, {});\n\n  const content = Object.keys(organizedGuides)\n    .sort()\n    .map(subCategory => (\n      <GuideList\n        key={subCategory}\n        subCategoryTitle={subCategory}\n        guides={organizedGuides[subCategory]}\n      />\n    ));\n\n  return <MainLayout title={category}>{content}</MainLayout>;\n};\n\nexport default CategoryTemplate;\n\nexport const query = graphql`\n  query ($categoryRegex: String!) {\n    allMdx(filter: { fields: { pagePath: { regex: $categoryRegex } } }) {\n      nodes {\n        frontmatter {\n          title\n          description\n          slug\n          subCategory\n        }\n      }\n    }\n  }\n`;\n"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","useStyles","makeStyles","theme","guideInfo","display","paddingTop","spacing","paddingBottom","viewButton","marginRight","subCategoryTitle","marginTop","GuideList","guides","classes","orderedGuides","orderBy","guide","frontmatter","title","guideList","map","index","slug","description","guideTitleId","getGuideTitleId","guideDescriptionId","getGuideDescriptionId","key","ListItem","className","disableGutters","IconButton","component","Link","to","role","Visibility","ListItemText","Typography","variant","id","length","Divider","List","data","pageContext","allMdx","nodes","category","organizedGuides","reduce","result","subCategory","subCategoryGuides","push","content","Object","keys","sort"],"sourceRoot":""}